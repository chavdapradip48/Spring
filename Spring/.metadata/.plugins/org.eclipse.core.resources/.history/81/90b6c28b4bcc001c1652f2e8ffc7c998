package com.pradip.springmvc.config;

import org.springframework.beans.factory.config.ConfigurableBeanFactory;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;
import org.springframework.web.servlet.view.InternalResourceViewResolver;

import com.pradip.springmvc.dao.Dao;
import com.pradip.springmvc.dao.DaoImpl;
import com.pradip.springmvc.model.Address;
import com.pradip.springmvc.model.User;
import com.pradip.springmvc.service.ServiceImpl;
import com.pradip.springmvc.service.ServiceInf;

//@EnableWebMvc
@Configuration
//@ComponentScan(basePackages = "com.pradip.springmvc.controller")
public class AppConfig {
//	@Bean
//	public InternalResourceViewResolver viewResolver() {
//		System.out.println("This is view resolver");
//		InternalResourceViewResolver viewResolver=new InternalResourceViewResolver();
//		viewResolver.setPrefix("/WEB-INF/views/");
//		viewResolver.setSuffix(".jsp");
//		return viewResolver;
//	}
	
	@Bean
	@Scope(value = ConfigurableBeanFactory.SCOPE_PROTOTYPE)
	public User getUser() {
		return new User();
	}
	@Bean
	@Scope(value = ConfigurableBeanFactory.SCOPE_PROTOTYPE)
	public Address getAddress() {
		return new Address();
	}
	public Dao getDao() {
		return new DaoImpl();
	}
	
	public ServiceInf getService() {
		return new ServiceImpl();
	}
}


/*
 * <?xml version="1.0" encoding="UTF-8"?>
 * 
 * <beans xmlns="http://www.springframework.org/schema/beans"
 * xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 * xmlns:context="http://www.springframework.org/schema/context"
 * xmlns:mvc="http://www.springframework.org/schema/mvc" xsi:schemaLocation="
 * http://www.springframework.org/schema/beans
 * http://www.springframework.org/schema/beans/spring-beans.xsd
 * http://www.springframework.org/schema/context
 * http://www.springframework.org/schema/context/spring-context.xsd
 * http://www.springframework.org/schema/mvc
 * http://www.springframework.org/schema/mvc/spring-mvc.xsd">
 * 
 * <!-- freemarker config --> <!-- <bean id="freemarkerConfig"
 * class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
 * <property name="templateLoaderPath" value="/WEB-INF/ftlpages/"/> </bean> -->
 * 
 * <!-- View resolvers can also be configured with ResourceBundles or XML files.
 * If you need different view resolving based on Locale, you have to use the
 * resource bundle resolver. --> <!-- <bean id="viewResolver" class=
 * "org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
 * <property name="cache" value="true"/> <property name="prefix" value=""/>
 * <property name="suffix" value=".ftl"/> </bean> --> <!-- Provide support for
 * component scanning --> <!-- <context:component-scan
 * base-package="com.pradip.springmvc.controller" /> <context:component-scan
 * base-package="com.pradip.springmvc.dao" /> <context:component-scan
 * base-package="com.pradip.springmvc.service" /> -->
 * 
 * <mvc:annotation-driven /> <mvc:resources mapping="/resources/**"
 * location="/resources/" />
 * 
 * 
 * <!-- <bean id="viewResolver"
 * class="org.springframework.web.servlet.view.InternalResourceViewResolver">
 * <property name="prefix" value="/WEB-INF/views/"></property> <property
 * name="suffix" value=".jsp"></property> </bean> --> <bean
 * name="multipartResolver"
 * class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
 * 
 * </beans>
 */