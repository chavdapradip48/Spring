1) assume a case 
	where we have class 'A' and class 'B' 
	where scope of bean 'A' is singleton 
		and 
	      scope of bean 'B' is prototype 
	   and 
	'B' is referenced in 'A' 
	
	so if we now make objects of class 'A'
	
	what will happen, 
	
	will it make new object everytime 
		or 
	same object everytime? 
	
	do a practical and justify your answer.
	
==========================================================================================================================================

ANSWER : 
========

=> If we make object of A class multiple time then it return same object not create new object.


==========================================================================================================================================

CODIND :
========

----------------------------------------------------------------------------------------------------------
1. Tyre.java(bean)
-----------------------

package com.pradip.spring;

public class Tyre {
	String brandName;
	int price;

	public String getBrandName() {
		return brandName;
	}
	public void setBrandName(String brandName) {
		this.brandName = brandName;
	}
	public int getPrice() {
		return price;
	}
	public void setPrice(int price) {
		this.price = price;
	}
	@Override
	public String toString() {
		return "Tyre [brandName=" + brandName + ", price=" + price + "]";
	}
}

----------------------------------------------------------------------------------------------------------
2. Bike.java(bean)
-----------------------
package com.pradip.spring;
public class Bike {
	String bikeName;
	String bikeModel;
	int bikeSpeed;
	Tyre bikeTyre;

	public Bike(String bikeName) {
		this.bikeName = bikeName;
	}
	
	public Tyre getBikeTyre() {
		return bikeTyre;
	}

	public void setBikeTyre(Tyre bikeTyre) {
		this.bikeTyre = bikeTyre;
	}

	public String getBikeName() {
		return bikeName;
	}

	public void setBikeName(String bikeName) {
		this.bikeName = bikeName;
	}
	public String getBikeModel() {
		return bikeModel;
	}
	public void setBikeModel(String bikeModel) {
		this.bikeModel = bikeModel;
	}
	public int getBikeSpeed() {
		return bikeSpeed;
	}
	public void setBikeSpeed(int bikeSpeed) {
		this.bikeSpeed = bikeSpeed;
	}
	@Override
	public String toString() {
		return "Bike [bikeName=" + bikeName + ", bikeModel=" + bikeModel + ", bikeSpeed=" + bikeSpeed + ", bikeTyre="
				+ bikeTyre + "]";
	}
}

----------------------------------------------------------------------------------------------------------
3. Requirement.java(main)
-----------------------
package com.pradip.spring;

import org.springframework.context.ApplicationContext;  
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class Requirement {
	public static void main(String args[]) { 
		/*
		 * There are two type of IOC container 
		 * 1. ApplicationContext :
		 * => ApplicationContext context= new ClassPathXmlApplicationContext("springbean.xml");
		 * 
		 * 2. BeanFactory
		 * => 
		 * 	Resource resource=new ClassPathResource("springbean.xml");  
		 * 	BeanFactory factory=new XmlBeanFactory(resource);   
		 * 
		 * */
		
		// ApplicationContext use to get access of xml file 
		ApplicationContext context= new ClassPathXmlApplicationContext("springbean.xml");
		
		Bike hondaObject=(Bike)context.getBean("honda");
		Bike hondaObject2=(Bike)context.getBean("honda");
		System.out.println("\n\n** Getter and setter example\n");
		System.out.println("=> Bike toString Method is : ");
		System.out.println(hondaObject.toString());
		System.out.println(hondaObject2.toString());
		System.out.println("=> Both objet hascode is : 1. "+hondaObject.hashCode()+" 2. "+hondaObject2.hashCode());
		
		Tyre tyre=(Tyre)context.getBean("bikeTyre");
		Tyre tyre2=(Tyre)context.getBean("bikeTyre");
		System.out.println("\n\n=> Tyre toString Method is (referenced from bike): ");
		System.out.println(tyre.toString());
		System.out.println(tyre2.toString());
		System.out.println("=> Both objet hascode is : 1. "+tyre.hashCode()+" 2. "+tyre2.hashCode());
	}
}

----------------------------------------------------------------------------------------------------------
4. springbean.xml
-----------------------
<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns = "http://www.springframework.org/schema/beans"
   xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation = "http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">



   
    <!-- bike id have a access of Bike class -->
	<bean id="honda" class="com.pradip.spring.Bike" scope="singleton">
		<property name="bikeName" value="Honda" />
		<property name="bikeModel" value="A235" />
		<property name="bikeSpeed" value="225" />
		<property name="bikeTyre">
			<ref bean="bikeTyre"/>
		</property>
	<!-- <property name="bikeTyre" ref="bikeTyre"/>-->
	</bean>

	<bean id="bikeTyre" class="com.pradip.spring.Tyre" scope="prototype">
		<property name="brandName" value="MRF" />
		<property name="price" value="6500" />
	</bean>
	<!-- 
	<alias name="honda" alias="hondalias"/>
	<alias name="honda" alias="bajajalias"/>
	 -->
	
</beans>
----------------------------------------------------------------------------------------------------------
5. output : 
----------------


** Getter and setter example

=> Bike toString Method is : 
Bike [bikeName=Honda, bikeModel=A235, bikeSpeed=225, bikeTyre=Tyre [brandName=MRF, price=6500]]
Bike [bikeName=Honda, bikeModel=A235, bikeSpeed=225, bikeTyre=Tyre [brandName=MRF, price=6500]]
=> Both objet hascode is : 1. 1572098393 2. 1572098393


=> Tyre toString Method is (referenced from bike): 
Tyre [brandName=MRF, price=6500]
Tyre [brandName=MRF, price=6500]
=> Both objet hascode is : 1. 1627857534 2. 2084663827


