



						Bean with Collection and properties using xml:
						==============================================

----------------------------------------------------------------------------------------------------------
1. JavaCollections.java(bean)
-----------------------------
package com.pradip.collections;

import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.Set;

public class JavaCollections {
	List<String> list;
	Set<String>  set;
	Map<Integer,String>  map;
	Properties properties;
	public List<String> getList() {
		return list;
	}
	public void setList(List<String> list) {
		this.list = list;
	}
	public Set<String> getSet() {
		return set;
	}
	public void setSet(Set<String> set) {
		this.set = set;
	}
	public Map<Integer, String> getMap() {
		return map;
	}
	public void setMap(Map<Integer, String> map) {
		this.map = map;
	}
	public Properties getProperties() {
		return properties;
	}
	public void setProperties(Properties properties) {
		this.properties = properties;
	}

}


----------------------------------------------------------------------------------------------------------
2. GetCollections.java
----------------------
package com.pradip.collections;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class GetCollections {
	public static void main(String args[]) { 
		// ApplicationContext use to get access of xml file 
		ApplicationContext context= new ClassPathXmlApplicationContext("collections.xml");
		
		JavaCollections listObject=(JavaCollections)context.getBean("collections");
		// Take list from collections class and print that and it contain duplicate values
		System.out.println("\n\n** List Values is : \n");
		System.out.println(listObject.getList());
		// Take set from collection class and print and it can not contains duplicate values
		// if set contain multiple values then it print first value then skip all other same values 
		System.out.println("\n\n** Set Values is : \n");
		System.out.println(listObject.getSet());
		System.out.println("=> NOTE : Here we see second pradip not print \n\tbecause list contains duplicate values but set can not contains duplicate values.");
		
		
		System.out.println("\n\n** Map Values is : \n");
		System.out.println("-> Keys is : "+listObject.getMap().keySet());
		System.out.println("-> Values is : "+listObject.getMap().values());
		System.out.println("=> NOTE : Map contains duplicate values but keys can not duplicate. \n\tIf Map have multiple same keys then it take last key");
		System.out.println("\tIn above we have three same key it print last and it print two time Tea");
		
		System.out.println("\n\n** Properties Values is : \n");
		System.out.println("-> First Name is : "+listObject.getProperties().getProperty("fName"));
		System.out.println("-> Last Name is : "+listObject.getProperties().getProperty("lName"));
		System.out.println("-> Mobile is : "+listObject.getProperties().getProperty("mobile"));
		System.out.println("-> Address is : "+listObject.getProperties().getProperty("address"));
		
		System.out.println("\n=> NOTE : Properties contains duplicate values but keys can not duplicate. \n\tIf Map have multiple same keys then it take last key");
		System.out.println("\tIn above we have three same key it print last and it print two time Tea");
		
	}
}


----------------------------------------------------------------------------------------------------------
3. collections.xml :
-------------------
<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns = "http://www.springframework.org/schema/beans"
   xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation = "http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">
	
	<bean id="collections" class="com.pradip.collections.JavaCollections">
		<property name="list">
			<list>
				<value>Pradip</value>
				<value>Sandip</value>
				<value>Rakesh</value>
				<value>Pradip</value>
				<value>Jaydip</value>
				<value>Ajay</value>
				<value>Krunal</value>
				<value>Daryll</value>
			</list>
		</property>
		<property name="set">
			<set>
				<value>Pradip</value>
				<value>Sandip</value>
				<value>Rakesh</value>
				<value>Pradip</value>
				<value>Jaydip</value>
				<value>Ajay</value>
				<value>Krunal</value>
				<value>Daryll</value>
			</set>
		</property>
		<property name="map">
			<map>
				<entry key="1" value="Milk"/>
				<entry key="2" value="Tea"/>
				<entry key="3" value="Coffee"/>
				<entry key="3" value="Cold Tea"/>
				<entry key="3" value="cold Coffee"/>
				<entry key="4" value="Water"/>
				<entry key="5" value="Tea"/>
			</map>
		</property>
		<property name="properties">
			<props>
				<prop key="fName">Pradip</prop>
				<prop key="lName">Chavda</prop>
				<prop key="mobile">966492495</prop>
				<prop key="mobile">96649249d5</prop>
				<prop key="address">Memnagar, Ahmedabad</prop>
			</props>
		</property>
	</bean>
	
</beans>



=========================================================================================================
5. OutPut
==========================================================================================================


** List Values is : 

[Pradip, Sandip, Rakesh, Pradip, Jaydip, Ajay, Krunal, Daryll]


** Set Values is : 

[Pradip, Sandip, Rakesh, Jaydip, Ajay, Krunal, Daryll]
=> NOTE : Here we see second pradip not print 
	because list contains duplicate values but set can not contains duplicate values.


** Map Values is : 

-> Keys is : [1, 2, 3, 4, 5]
-> Values is : [Milk, Tea, cold Coffee, Water, Tea]
=> NOTE : Map contains duplicate values but keys can not duplicate. 
	If Map have multiple same keys then it take last key
	In above we have three same key it print last and it print two time Tea


** Properties Values is : 

-> First Name is : Pradip
-> Last Name is : Chavda
-> Mobile is : 96649249d5
-> Address is : Memnagar, Ahmedabad

=> NOTE : Properties contains duplicate values but keys can not duplicate. 
	If Map have multiple same keys then it take last key
	In above we have three same key it print last and it print two time Tea













