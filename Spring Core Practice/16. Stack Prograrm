




						Stack Prograrm 
						==============

==========================================================================================================
DEFINATION :
==========================================================================================================
Write a program which implement STACK operations PUSH,POP. 
	It allows to add/remove elements from the STACK from 
		any position and rearrange the stack.
==========================================================================================================




----------------------------------------------------------------------------------------------------------
1. AppConfig.java(annotation)
-----------------------------
package com.pradip.stack;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class AppConfig {
	@Bean
	public StackBean getStack() {
		return new StackBean();
	}
}



----------------------------------------------------------------------------------------------------------
2. StackBean.java (bean) :
-------------------------
package com.pradip.stack;

import java.util.Scanner;
import java.util.Stack;

import org.springframework.stereotype.Component;

@Component
public class StackBean {
	Stack<Integer> stack=new Stack<Integer>();
	Scanner sc =new Scanner(System.in);
	public Stack<Integer> getStack() {
		return stack;
	}

	public void setStack(Stack<Integer> stack) {
		this.stack = stack;
	}
	
	public void pushDefault() {
		System.out.print("=> Please enter number for push: ");
		int element=sc.nextInt();
		stack.push(element);
		System.out.print("\n!!! "+element+"  poshed successfully.\n");
	}
	
	public void popDefault() {
		if(!stack.isEmpty()) {
			int topElement=stack.peek();
			stack.pop();
			System.out.print("\n!!! "+topElement+" poped successfully.\n");
		}
		else {
			System.out.print("\n!!! Stack is Empty.\n");
		}
		
	}
	public void addSpecified() {

		System.out.print("=> Please enter number for index: ");
		int position=sc.nextInt();
		int stackSize=stack.size();
		if(position > 0 && stackSize >= position-1) {
			System.out.print("=> Please enter number for push: ");
			int element=sc.nextInt();
			stack.add(position-1, element);
			System.out.print("\n!!! "+element+"  poshed successfully.\n");			
		}
		else {
			System.out.print("\n!!! Please enter numner between "+1+" to "+(stackSize+1)+".\n");
		}
	}
	
	public void removeSpecified() {
		if(!stack.isEmpty()) {
			System.out.print("=> Please enter number for index: ");
			int position=sc.nextInt();
			int stackSize=stack.size();
			if(position > 0 && stackSize >= position) {
				int Element=stack.get(position-1);
				stack.remove(position-1);
				System.out.print("\n!!! "+Element+"  poped successfully.\n");			
			}
			else {
				System.out.print("\n!!! Please enter numner between "+1+" to "+(stackSize)+".\n");
			}
		}
		else {
			System.out.print("\n!!! Stack is Empty.\n");
		}
	}

	public void dispayStack() {
		if(!stack.isEmpty()) {
			System.out.println("\n=> Stack values are : [" + stack + "]");
		}
		else {
			System.out.print("\n!!! Stack is Empty.\n");
		}
	}
	
}




----------------------------------------------------------------------------------------------------------
3.  StackProgram.java(main) :
----------------------------
package com.pradip.stack;

import java.util.Scanner;

import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import org.springframework.context.support.AbstractApplicationContext;

public class StackProgram {
	
	public static void main(String args[]) {
		
		AbstractApplicationContext context=new AnnotationConfigApplicationContext(AppConfig.class);
		StackBean stack=context.getBean(StackBean.class);
		
		Scanner sc=new Scanner(System.in);
		a:while(true) {
			System.out.println("\n-------------------------------------------");
			System.out.println("\tStack System\n\t=============");
			System.out.println("\t1. Push element.");
			System.out.println("\t2. Pop element.");
			System.out.println("\t3. Add element in specified index.");
			System.out.println("\t4. Remove element from specified index.");
			System.out.println("\t5. Display stack.");
			System.out.println("\t6. Exit.\n");
			System.out.print("=> Please enter your choice number : ");
			int num=sc.nextInt();
			switch(num) {
			case 1:
				System.out.println("\n\tPUSH SYSTEM\n\t-----------");
				stack.pushDefault();
				break;
			case 2:
				System.out.println("\n\tPOP SYSTEM\n\t----------\n");
				stack.popDefault();
				break;
			case 3:
				stack.addSpecified();
				System.out.println("\n\tADD ELEMENT BY SPECIFIED INDEX SYSTEM \n\t-------------------------------------\n");
				break;
			case 4:
				System.out.println("\n\tREMOVE ELEMENT BY SPECIFIED INDEX SYSTEM \n\t-----------------------------------------\n");
				stack.removeSpecified();
				break;
			case 5:
				System.out.println("\n\tVIEW STACK SYSTEM\n\t------------------\n");
				stack.dispayStack();
				break;
			case 6:
				System.out.println("\n\n\t\t $$ Thank you for using our system $$");
				break a;
			default:
				System.out.println("Please enter valid choose");
			}
		}
		context.close();
		sc.close();
	}
}



=========================================================================================================
4. OutPut
==========================================================================================================


-------------------------------------------
	Stack System
	=============
	1. Push element.
	2. Pop element.
	3. Add element in specified index.
	4. Remove element from specified index.
	5. Display stack.
	6. Exit.

=> Please enter your choice number : 5

	VIEW STACK SYSTEM
	------------------


!!! Stack is Empty.

-------------------------------------------
	Stack System
	=============
	1. Push element.
	2. Pop element.
	3. Add element in specified index.
	4. Remove element from specified index.
	5. Display stack.
	6. Exit.

=> Please enter your choice number : 4

	REMOVE ELEMENT BY SPECIFIED INDEX SYSTEM 
	-----------------------------------------


!!! Stack is Empty.

-------------------------------------------
	Stack System
	=============
	1. Push element.
	2. Pop element.
	3. Add element in specified index.
	4. Remove element from specified index.
	5. Display stack.
	6. Exit.

=> Please enter your choice number : 2

	POP SYSTEM
	----------


!!! Stack is Empty.

-------------------------------------------
	Stack System
	=============
	1. Push element.
	2. Pop element.
	3. Add element in specified index.
	4. Remove element from specified index.
	5. Display stack.
	6. Exit.

=> Please enter your choice number : 1

	PUSH SYSTEM
	-----------
=> Please enter number for push: 22

!!! 22  poshed successfully.

-------------------------------------------
	Stack System
	=============
	1. Push element.
	2. Pop element.
	3. Add element in specified index.
	4. Remove element from specified index.
	5. Display stack.
	6. Exit.

=> Please enter your choice number : 5

	VIEW STACK SYSTEM
	------------------


=> Stack values are : [[22]]

-------------------------------------------
	Stack System
	=============
	1. Push element.
	2. Pop element.
	3. Add element in specified index.
	4. Remove element from specified index.
	5. Display stack.
	6. Exit.

=> Please enter your choice number : 3
=> Please enter number for index: 2
=> Please enter number for push: 20

!!! 20  poshed successfully.

	ADD ELEMENT BY SPECIFIED INDEX SYSTEM 
	-------------------------------------


-------------------------------------------
	Stack System
	=============
	1. Push element.
	2. Pop element.
	3. Add element in specified index.
	4. Remove element from specified index.
	5. Display stack.
	6. Exit.

=> Please enter your choice number : 3
=> Please enter number for index: 4

!!! Please enter numner between 1 to 3.

	ADD ELEMENT BY SPECIFIED INDEX SYSTEM 
	-------------------------------------


-------------------------------------------
	Stack System
	=============
	1. Push element.
	2. Pop element.
	3. Add element in specified index.
	4. Remove element from specified index.
	5. Display stack.
	6. Exit.

=> Please enter your choice number : 3
=> Please enter number for index: 3
=> Please enter number for push: 22

!!! 22  poshed successfully.

	ADD ELEMENT BY SPECIFIED INDEX SYSTEM 
	-------------------------------------


-------------------------------------------
	Stack System
	=============
	1. Push element.
	2. Pop element.
	3. Add element in specified index.
	4. Remove element from specified index.
	5. Display stack.
	6. Exit.

=> Please enter your choice number : 5

	VIEW STACK SYSTEM
	------------------


=> Stack values are : [[22, 20, 22]]

-------------------------------------------
	Stack System
	=============
	1. Push element.
	2. Pop element.
	3. Add element in specified index.
	4. Remove element from specified index.
	5. Display stack.
	6. Exit.

=> Please enter your choice number : 3
=> Please enter number for index: 1
=> Please enter number for push: 666

!!! 666  poshed successfully.

	ADD ELEMENT BY SPECIFIED INDEX SYSTEM 
	-------------------------------------


-------------------------------------------
	Stack System
	=============
	1. Push element.
	2. Pop element.
	3. Add element in specified index.
	4. Remove element from specified index.
	5. Display stack.
	6. Exit.

=> Please enter your choice number : 5

	VIEW STACK SYSTEM
	------------------


=> Stack values are : [[666, 22, 20, 22]]

-------------------------------------------
	Stack System
	=============
	1. Push element.
	2. Pop element.
	3. Add element in specified index.
	4. Remove element from specified index.
	5. Display stack.
	6. Exit.

=> Please enter your choice number : 3
=> Please enter number for index: -1

!!! Please enter numner between 1 to 5.

	ADD ELEMENT BY SPECIFIED INDEX SYSTEM 
	-------------------------------------


-------------------------------------------
	Stack System
	=============
	1. Push element.
	2. Pop element.
	3. Add element in specified index.
	4. Remove element from specified index.
	5. Display stack.
	6. Exit.

=> Please enter your choice number : 4

	REMOVE ELEMENT BY SPECIFIED INDEX SYSTEM 
	-----------------------------------------

=> Please enter number for index: 0

!!! Please enter numner between 1 to 4.

-------------------------------------------
	Stack System
	=============
	1. Push element.
	2. Pop element.
	3. Add element in specified index.
	4. Remove element from specified index.
	5. Display stack.
	6. Exit.

=> Please enter your choice number : 4

	REMOVE ELEMENT BY SPECIFIED INDEX SYSTEM 
	-----------------------------------------

=> Please enter number for index: -1

!!! Please enter numner between 1 to 4.

-------------------------------------------
	Stack System
	=============
	1. Push element.
	2. Pop element.
	3. Add element in specified index.
	4. Remove element from specified index.
	5. Display stack.
	6. Exit.

=> Please enter your choice number : 4

	REMOVE ELEMENT BY SPECIFIED INDEX SYSTEM 
	-----------------------------------------

=> Please enter number for index: 3

!!! 20  poped successfully.

-------------------------------------------
	Stack System
	=============
	1. Push element.
	2. Pop element.
	3. Add element in specified index.
	4. Remove element from specified index.
	5. Display stack.
	6. Exit.

=> Please enter your choice number : 666
Please enter valid choose

-------------------------------------------
	Stack System
	=============
	1. Push element.
	2. Pop element.
	3. Add element in specified index.
	4. Remove element from specified index.
	5. Display stack.
	6. Exit.

=> Please enter your choice number : 6


		 $$ Thank you for using our system $$

